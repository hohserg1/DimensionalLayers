apply from: 'gradle/scripts/helpers.gradle'

repositories {
    // Other repositories described by default:
    // CleanroomMC: https://maven.cleanroommc.com
    maven {
        name 'CurseMaven'
        url 'https://curse.cleanroommc.com'
    }
    maven {
        name 'Modrinth'
        url 'https://api.modrinth.com/maven'
    }
    maven {
        name "outlandsReleases"
        url "https://maven.arcseekers.com/releases"
    }
    mavenLocal() // Must be last for caching to work
    flatDir {
        dirs "${project.rootDir}/libs"
    }
    flatDir {
        dirs 'F:\\Development\\modding\\_artifacts_'
    }
}

dependencies {
    compileOnly "com.cleanroommc:sponge-mixin:0.20.10+mixin.0.8.7"
    if (propertyBool('enable_lwjglx')) {
        compileOnly "com.cleanroommc:lwjglx:1.0.0"
    }

    runtimeOnly "com.cleanroommc:scalar:1.0.0"

    implementation "_ABC:hooklib:+"
    compileOnly "abc:CubicChunks-1.12.2:0.0.1283.0-SNAPSHOT-all"
    //implementation "com.lihaoyi:upickle_3:4.3.2"
    implementation("com.github.plokhotnyuk.jsoniter-scala:jsoniter-scala-core_3:2.38.3")
    compileOnly("com.github.plokhotnyuk.jsoniter-scala:jsoniter-scala-macros_3:2.38.3")

    compileOnly "abc:NetherEx:1.12.2-2.2.5"
    compileOnly "abc:Geographicraft-1.12.2:0.9.8.5"
    compileOnly "abc:BiomesOPlenty-1.12.2:7.0.1.2445"
    implementation "abc:mystcraft-1.12.2:0.13.7.06"

    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies
    // contain = bundle dependency jars into final artifact, will extract them in mod loading. Please only do this to non-mod dependencies.
    // shadow = bundle dependencies into shadow output artifact (relocation configurable in shadowJar task)
    // modImplementation = mod dependency available at both compile time and runtime
    // modCompileOnly = mod dependency available only at compile time

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }
}
