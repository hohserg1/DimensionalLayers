apply plugin: 'idea'

idea {
    module {
        inheritOutputDirs = true
    }
}
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.1.27'
    }
}

apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '3.17'
group = 'hohserg.dimensional.layers' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'DimensionalLayers'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = files(
            'src/main/resources/META-INF/dimensional_layers_at.cfg',
            'libs_at/aether_at.cfg',
            'libs_at/orbis-lib_at.cfg',
            'libs_at/dimensionalcontrol_at.cfg',
            'libs_at/bnbgaminglib_at.cfg',
            'libs_at/mist_at.cfg',
            'libs_at/thebetweenlands_at.cfg',
            'libs_at/rtg_at.cfg',
            'libs_at/resourcereloader_at.cfg'
    )

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'fml.coreMods.load', 'hohserg.dimensional.layers.asm.DimensionalLayersCoreMod'
            //property 'mixin.env.remapRefMap', 'true'
            //property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    flatDir {
        dir 'libs'
    }
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    compileOnly 'abc:CubicChunks-1.12.2:0.0.1270.0-SNAPSHOT:dev-all'
    compileOnly 'abc:CubicWorldGen-1.12.2:0.0.180.0-SNAPSHOT:dev'
    compileOnly fg.deobf('abc:malisiscore-1.12.2:6.5.1')

    //implementation 'abc:DivineRPG:1.7.1'

    //implementation fg.deobf('abc:aether_ii-1.12.2:0.3.0')
    //implementation fg.deobf('abc:orbis-lib-1.12.2:0.2.0')

    //implementation fg.deobf('abc:RTG-1.12.2:6.1.0.0')

    //implementation 'abc:AbyssalCraft:1.12.2-1.10.4'

    //implementation fg.deobf('abc:backrooms-ultimate-edition-1.12.1-1.12.2:0.1.7:hotfix')

    //implementation fg.deobf('abc:DimensionalControl-1.12.2:2.13.0')
    //implementation fg.deobf('abc:BNBGamingLib-1.12.2:2.17.6')
    //implementation fg.deobf('abc:BNBGamingCore-1.12.2:0.12.0')

    implementation fg.deobf("abc:TheBetweenlands:3.9.6:universal")
    compileOnly fg.deobf("abc:TheBetweenlands:3.9.6:core")

    implementation fg.deobf("abc:MistyWorld-1.12.2:1.2.5.3")

}

jar {
    manifest {
        attributes([
                "Specification-Title"        : "dimensional_layers",
                "Specification-Vendor"       : "hohserg",
                "Specification-Version"      : "1", // We are version 1 of ourselves
                "Implementation-Title"       : "${archivesBaseName}",
                "Implementation-Version"     : "${project.version}",
                "Implementation-Vendor"      : "hohserg",
                "Implementation-Timestamp"   : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "FMLCorePlugin"              : "hohserg.dimensional.layers.asm.DimensionalLayersCoreMod",
                "FMLCorePluginContainsFMLMod": "true",
                'FMLAT'                      : 'dimensional_layers_at.cfg'
        ])
    }
    destinationDirectory = file("$rootDir/production")
}

jar.finalizedBy('reobfJar')

processResources {
    inputs.property "version", version
    inputs.property "mcversion", '1.12.2'

    from('./src/main/unprepared_resources/') {
        include "*"
        include "*/*"

        expand "version": version, 'mcversion': '1.12.2'
    }
}